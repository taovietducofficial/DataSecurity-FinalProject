CREATE TABLE Resident (
    ResidentID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY, -- S? d?ng IDENTITY cho t? ??ng t?ng
    FullName          VARCHAR2(100) NOT NULL,
    Gender            CHAR(1) CHECK (Gender IN ('M', 'F')), -- Ràng bu?c gi?i tính
    Address           VARCHAR2(255),
    District          VARCHAR2(50) NOT NULL,
    IDCardNumber      VARCHAR2(15) UNIQUE NOT NULL,
    PhoneNumber       VARCHAR2(15) UNIQUE, -- S? ?i?n tho?i ph?i duy nh?t (n?u c?n)
    Email             VARCHAR2(100) UNIQUE, -- Email ph?i duy nh?t
    PassportNumber    VARCHAR2(15) UNIQUE -- S? h? chi?u duy nh?t (n?u c?n)
);

CREATE TABLE PassportRenewalRequest (
    RequestID         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY, 
    ResidentID        NUMBER NOT NULL REFERENCES Resident(ResidentID) ON DELETE CASCADE, -- T? ??ng xóa khi Resident b? xóa
    SubmissionDate    DATE DEFAULT SYSDATE NOT NULL,
    Status            VARCHAR2(20) NOT NULL CHECK (Status IN (
        'Pending Verification', 'Verified', 'Under Review', 'Approved', 'Rejected'
    )), -- Tr?ng thái ph?i h?p l?
    VerificationUnit  VARCHAR2(10),
    ReviewComments    VARCHAR2(255)
);

CREATE TABLE VerificationUnit (
    UnitID            VARCHAR2(10) PRIMARY KEY,
    District          VARCHAR2(50) UNIQUE NOT NULL -- M?i District ch? có m?t ??n v? xác minh
);

CREATE TABLE Approval (
    ApprovalID        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY, -- ID t? ??ng t?ng
    RequestID         NUMBER NOT NULL REFERENCES PassportRenewalRequest(RequestID) ON DELETE CASCADE,
    IsApproved        CHAR(1) NOT NULL CHECK (IsApproved IN ('Y', 'N')), -- Ch? Y/N
    ApprovalDate      DATE DEFAULT SYSDATE NOT NULL,
    ReviewerComments  VARCHAR2(255)
);

CREATE TABLE Renewal (
    RenewalID         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY, -- ID t? ??ng t?ng
    RequestID         NUMBER NOT NULL REFERENCES PassportRenewalRequest(RequestID) ON DELETE CASCADE,
    NewExpiryDate     DATE NOT NULL, -- Ngày h?t h?n m?i
    UpdatedAt         DATE DEFAULT SYSDATE NOT NULL
);


CREATE TABLE ActivityLog (
    LogID             NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY, -- ID t? ??ng t?ng
    RequestID         NUMBER NOT NULL REFERENCES PassportRenewalRequest(RequestID) ON DELETE CASCADE,
    Status            VARCHAR2(20) NOT NULL, -- Tr?ng thái liên quan
    ActionTimestamp   DATE DEFAULT SYSDATE NOT NULL,
    PerformedBy       VARCHAR2(50) NOT NULL -- Ng??i th?c hi?n hành ??ng
);


CREATE SEQUENCE ActivityLog_seq
START WITH 1
INCREMENT BY 1
NOCACHE;


--policy
CREATE OR REPLACE FUNCTION Policy_XT (schema_name IN VARCHAR2, table_name IN VARCHAR2)
RETURN VARCHAR2 IS
BEGIN
    -- Ki?m tra n?u user hi?n t?i l? XT_USER
    IF SYS_CONTEXT('USERENV', 'CURRENT_USER') = 'XT_USER' THEN
        RETURN '1=1'; -- Cho ph?p xem t?t c? d? li?u
    ELSE
        RETURN '1=0'; -- Kh?ng cho ph?p xem
    END IF;
END;

CREATE OR REPLACE FUNCTION Policy_XD (schema_name IN VARCHAR2, table_name IN VARCHAR2)
RETURN VARCHAR2 IS
BEGIN
    -- Ki?m tra n?u user hi?n t?i l? XT_USER
    IF SYS_CONTEXT('USERENV', 'CURRENT_USER') = 'XD_USER' THEN
        RETURN '1=1'; -- Cho ph?p xem t?t c? d? li?u
    ELSE
        RETURN '1=0'; -- Kh?ng cho ph?p xem
    END IF;
END;

CREATE OR REPLACE FUNCTION Policy_LT (schema_name IN VARCHAR2, table_name IN VARCHAR2)
RETURN VARCHAR2 IS
BEGIN
    -- Ki?m tra n?u user hi?n t?i l? XT_USER
    IF SYS_CONTEXT('USERENV', 'CURRENT_USER') = 'LT_USER' THEN
        RETURN '1=1'; -- Cho ph?p xem t?t c? d? li?u
    ELSE
        RETURN '1=0'; -- Kh?ng cho ph?p xem
    END IF;
END;

BEGIN
    -- G?n policy cho XT
    DBMS_RLS.ADD_POLICY(
        object_schema => 'system',
        object_name => 'Resident',
        policy_name => 'XT_only',
        function_schema => 'sys',
        policy_function => 'Policy_XT',
        statement_types => 'SELECT',
        update_check    => TRUE
    );
end;
BEGIN
    -- G?n policy cho XD
    DBMS_RLS.ADD_POLICY(
        object_schema => 'sys',
        object_name => 'PassportRenewalRequest',
        policy_name => 'XD_only',
        function_schema => 'sys',
        policy_function => 'Policy_XD',
        statement_types => 'SELECT',
	update_check    => TRUE
    );
end;

BEGIN
    -- G?n policy cho LT
    DBMS_RLS.ADD_POLICY(
        object_schema => 'sys',
        object_name => 'Approval',
        policy_name => 'LT_only',
        function_schema => 'sys',
        policy_function => 'Policy_LT',
        statement_types => 'SELECT, UPDATE',
	update_check    => TRUE
    );
end;

Begin
    -- G?n policy cho GS
    DBMS_RLS.ADD_POLICY(
        object_schema => 'sys',
        object_name => 'Renewal',
        policy_name => 'LT_only',
        function_schema => 'sys',
        policy_function => 'Policy_LT',
        statement_types => 'SELECT',
	update_check    => TRUE
    );
END;


--AUDIT
--Gán giám sát lên các user XT, GS, LT, XD
AUDIT SELECT TABLE, UPDATE TABLE, INSERT TABLE, DELETE TABLE BY XT_USER, GS_USER, XD_USER, LT_USER;
AUDIT CREATE TABLE BY XT_USER, GS_USER, LT_USER;
AUDIT DROP ANY TABLE BY XT_USER, GS_USER, LT_USER;

--Xem các hành động mà user đó đã thực hiện trên các bảng
SELECT USERNAME, ACTION_NAME FROM DBA_AUDIT_TRAIL 
WHERE USERNAME = 'XT_USER'; 

select username, timestamp, obj_name, action_name  from dba_audit_trail where username = 'LT_USER';  

CREATE SEQUENCE request_id_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER request_id_trigger
BEFORE INSERT ON APPROVAL
FOR EACH ROW
BEGIN
  IF :new.REQUESTID IS NULL THEN
    SELECT request_id_seq.NEXTVAL INTO :new.REQUESTID FROM dual;
  END IF;
END;

CREATE SEQUENCE ActivityLog_seq
START WITH 1
INCREMENT BY 1
NOCACHE;


-- Triggers to maintain security and audit logs
CREATE OR REPLACE TRIGGER trg_VerifyStatusChange
BEFORE UPDATE ON PassportRenewalRequest
FOR EACH ROW
BEGIN
    INSERT INTO ActivityLog (LogID, RequestID, Status, PerformedBy)
    VALUES (ActivityLog_seq.NEXTVAL, :NEW.RequestID, :NEW.Status, USER);
END;
/

CREATE SYNONYM XT_Resident FOR Resident;
CREATE SYNONYM XT_PassportRenewalRequest FOR PassportRenewalRequest;

CREATE SYNONYM XD_PassportRenewalRequest FOR PassportRenewalRequest;

CREATE SYNONYM LT_Renewal FOR Renewal;
CREATE SYNONYM LT_Approval FOR Approval;

CREATE OR REPLACE FUNCTION renewal_request_policy (schema_name IN VARCHAR2, table_name IN VARCHAR2)
RETURN VARCHAR2 IS
BEGIN
  IF (USER = 'XD_USER') THEN
    RETURN 'Status IN (''Pending Verification'', ''Verified'', ''Under Review'', ''Approved'')'; -- Chỉ xem các yêu cầu chưa phê duyệt hoặc đã xác thực
  ELSE
    RETURN '1 = 0';  -- Không cho phép bất kỳ dữ liệu nào
  END IF;
END renewal_request_policy;
/

INSERT INTO PassportRenewalRequest (ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments)
VALUES (1, TO_DATE('10-DEC-24', 'DD-MON-YY'), 'Pending Verification', 'V001', 'Awaiting verification');

INSERT INTO PassportRenewalRequest (ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments)
VALUES (2, TO_DATE('11-DEC-24', 'DD-MON-YY'), 'Verified', 'V002', 'All details verified');

INSERT INTO PassportRenewalRequest (ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments)
VALUES (3, TO_DATE('12-DEC-24', 'DD-MON-YY'), 'Under Review', 'V003', 'Pending approval');

INSERT INTO PassportRenewalRequest (ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments)
VALUES (5, TO_DATE('16-DEC-24', 'DD-MON-YY'), 'Under Review', 'V005', 'Review in progress');

INSERT INTO PassportRenewalRequest (ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments)
VALUES (6, TO_DATE('17-DEC-24', 'DD-MON-YY'), 'Approved', 'V006', 'Request approved successfully');

INSERT INTO Resident (ResidentID, FullName, Gender, Address, District, IDCardNumber, PhoneNumber, Email, PassportNumber) 
VALUES (1, 'Nguyen Minh Tu', 'M', '123 Tran Hung Dao', 'District A', '123456789', '0123456789', 'tu.nguyen@example.com', 'P987654');

INSERT INTO Resident (ResidentID, FullName, Gender, Address, District, IDCardNumber, PhoneNumber, Email, PassportNumber) 
VALUES (2, 'Tran Thi Mai', 'F', '456 Le Lai', 'District B', '987654321', '0234567890', 'mai.tran@example.com', 'P321456');

INSERT INTO Resident (ResidentID, FullName, Gender, Address, District, IDCardNumber, PhoneNumber, Email, PassportNumber) 
VALUES (3, 'Hoang Thanh Son', 'M', '789 Hoang Hoa Tham', 'District C', '135792468', '0345678901', 'son.hoang@example.com', 'P654789');

INSERT INTO Resident (ResidentID, FullName, Gender, Address, District, IDCardNumber, PhoneNumber, Email, PassportNumber) 
VALUES (5, 'Nguyen Hoai Thu', 'F', '456 Nguyen Trai', 'District B', '234567890', '0456789012', 'thu.nguyen@example.com', 'P987321');

INSERT INTO Resident (ResidentID, FullName, Gender, Address, District, IDCardNumber, PhoneNumber, Email, PassportNumber) 
VALUES (6, 'Phan Duy Khanh', 'M', '789 Tan Phu', 'District C', '567890123', '0567890123', 'khannhphan@example.com', 'P741369');

INSERT INTO Resident (ResidentID, FullName, Gender, Address, District, IDCardNumber, PhoneNumber, Email, PassportNumber) 
VALUES (4, 'Tao Viet D?c', 'M', 'Long An', 'Duc Hoa', '567890126', '0971467418', 'taovietduc@gmail.com', 'P741370');
-- D? li?u cho b?ng VerificationUnit
DELETE FROM VerificationUnit WHERE UnitID IN ('V001', 'V002', 'V003', 'V004', 'V005', 'V006');

INSERT INTO VerificationUnit (UnitID, District) VALUES ('V001', 'District A');
INSERT INTO VerificationUnit (UnitID, District) VALUES ('V002', 'District B');
INSERT INTO VerificationUnit (UnitID, District) VALUES ('V003', 'District C');
INSERT INTO VerificationUnit (UnitID, District) VALUES ('V004', 'District D');
INSERT INTO VerificationUnit (UnitID, District) VALUES ('V005', 'District E');
INSERT INTO VerificationUnit (UnitID, District) VALUES ('V006', 'District F');

SELECT * FROM VerificationUnit;

-- D? li?u cho b?ng PassportRenewalRequest
INSERT INTO PassportRenewalRequest (RequestID, ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments) 
VALUES (1, 1, TO_DATE('2024-12-10', 'YYYY-MM-DD'), 'Pending Verification', 'V001', 'Awaiting verification');

INSERT INTO PassportRenewalRequest (RequestID, ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments) 
VALUES (2, 2, TO_DATE('2024-12-11', 'YYYY-MM-DD'), 'Verified', 'V002', 'All details verified');

INSERT INTO PassportRenewalRequest (RequestID, ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments) 
VALUES (3, 3, TO_DATE('2024-12-12', 'YYYY-MM-DD'), 'Under Review', 'V003', 'Pending approval');

INSERT INTO PassportRenewalRequest (RequestID, ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments) 
VALUES (5, 5, TO_DATE('2024-12-16', 'YYYY-MM-DD'), 'Under Review', 'V005', 'Review in progress');

INSERT INTO PassportRenewalRequest (RequestID, ResidentID, SubmissionDate, Status, VerificationUnit, ReviewComments) 
VALUES (6, 6, TO_DATE('2024-12-17', 'YYYY-MM-DD'), 'Approved', 'V006', 'Request approved successfully');

SELECT * FROM PassportRenewalRequest;

-- D? li?u cho b?ng Approval
INSERT INTO Approval (ApprovalID, RequestID, IsApproved, ApprovalDate, ReviewerComments) 
VALUES (1, 1, 'Y', TO_DATE('2024-12-12', 'YYYY-MM-DD'), 'Approved after verification');

INSERT INTO Approval (ApprovalID, RequestID, IsApproved, ApprovalDate, ReviewerComments) 
VALUES (2, 2, 'N', TO_DATE('2024-12-13', 'YYYY-MM-DD'), 'Rejected due to missing documents');

INSERT INTO Approval (ApprovalID, RequestID, IsApproved, ApprovalDate, ReviewerComments) 
VALUES (4, 5, 'Y', TO_DATE('2024-12-17', 'YYYY-MM-DD'), 'Approved after verification');

SELECT * FROM Approval;

-- D? li?u cho b?ng Renewal
INSERT INTO Renewal (RenewalID, RequestID, NewExpiryDate, UpdatedAt) 
VALUES (1, 2, TO_DATE('2029-12-11', 'YYYY-MM-DD'), SYSDATE);

INSERT INTO Renewal (RenewalID, RequestID, NewExpiryDate, UpdatedAt) 
VALUES (2, 3, TO_DATE('2030-12-12', 'YYYY-MM-DD'), SYSDATE);

INSERT INTO Renewal (RenewalID, RequestID, NewExpiryDate, UpdatedAt) 
VALUES (3, 5, TO_DATE('2029-12-16', 'YYYY-MM-DD'), SYSDATE);

INSERT INTO Renewal (RenewalID, RequestID, NewExpiryDate, UpdatedAt) 
VALUES (4, 6, TO_DATE('2031-12-17', 'YYYY-MM-DD'), SYSDATE);

SELECT * FROM Renewal;

-- D? li?u cho b?ng ActivityLog
INSERT INTO ActivityLog (LogID, RequestID, Status, ActionTimestamp, PerformedBy) 
VALUES (1, 1, 'Pending Verification', SYSDATE, 'admin');

INSERT INTO ActivityLog (LogID, RequestID, Status, ActionTimestamp, PerformedBy) 
VALUES (2, 2, 'Verified', SYSDATE, 'admin');

INSERT INTO ActivityLog (LogID, RequestID, Status, ActionTimestamp, PerformedBy) 
VALUES (3, 3, 'Under Review', SYSDATE, 'reviewer1');

INSERT INTO ActivityLog (LogID, RequestID, Status, ActionTimestamp, PerformedBy) 
VALUES (5, 5, 'Under Review', SYSDATE, 'reviewer3');

INSERT INTO ActivityLog (LogID, RequestID, Status, ActionTimestamp, PerformedBy) 
VALUES (6, 6, 'Approved', SYSDATE, 'reviewer4');
INSERT INTO Resident (ResidentID, FullName, Gender, Address, District, IDCardNumber, PhoneNumber, Email, PassportNumber) 
VALUES (11, 'Tao Viet A', 'M', 'Long An', 'Duc Hoa', '567890130', '0971467425', 'taovieta@gmail.com', 'P7414025');
